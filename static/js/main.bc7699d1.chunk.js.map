{"version":3,"sources":["components/SearchButton.js","components/MovieCard.js","components/Search.js","App.js","index.js"],"names":["SearchButton","react_default","a","createElement","className","this","props","name","Component","MovieCard","_this$props","title","poster_path","release_date","genres","overview","id","src","alt","slice","join","substring","Search","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","value","target","state","radioGroup","type","handleSubmit","preventDefault","fetchMovies","_ref","asyncToGenerator","regenerator_default","mark","_callee","searchMovie","response","result","wrap","_context","prev","next","fetch","creatingQqueryString","sent","json","movies","data","stop","_x","apply","arguments","handleRadio","object","checked","concat","onSubmit","placeholder","onChange","components_SearchButton","htmlFor","length","map","movie","components_MovieCard","assign","key","App","components_Search","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.bc7699d1.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass SearchButton extends Component {\n    render() {\n        return(\n            <button className=\"search-btn\">{this.props.name}</button>\n        )\n    }\n}\nexport default SearchButton;","import React, { Component } from \"react\";\n\nclass MovieCard extends Component {\n  render() {\n    const { title, poster_path, release_date, genres, overview } = this.props;\n\n    return (\n      <div className=\"moviecard\">\n        <div id=\"container\">\n          <img src={poster_path} alt={title} />\n          <p>{overview}</p>\n        </div>\n        <div className=\"title\">{title}</div>\n        <div className=\"genre\">\n          {genres.slice(1, 3).join(\" & \")}{\" \"}\n          <div className=\"release-date\">{release_date.substring(0, 4)}</div>\n        </div>\n        \n      </div>\n    );\n  }\n}\nexport default MovieCard;\n","import React, { Component } from \"react\";\nimport SearchButton from \"./SearchButton\";\nimport MovieCard from \"./MovieCard\";\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      type: \"\",\n      movies: [],\n      radioGroup: {\n        title: false,\n        genres: false\n      }\n    };\n  }\n\n  handleChange = e => {\n    this.setState({ value: e.target.value });\n    if (this.state.radioGroup.title) {\n      this.setState({ type: \"title\" });\n    } else if (this.state.radioGroup.genres) {\n      this.setState({ type: \"genres\" });\n    }\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.fetchMovies();\n    this.setState({ value: \"\" });\n  };\n\n  fetchMovies = async searchMovie => {\n    const response = await fetch(this.creatingQqueryString());\n    const result = await response.json();\n    this.setState({ movies: result.data });\n  };\n\n  handleRadio = e => {\n    let object = {};\n    object[e.target.value] = e.target.checked;\n    this.setState({ radioGroup: object });\n    this.setState({ value: \"\" });\n  };\n\n  creatingQqueryString = () => {\n    return `https://reactjs-cdp.herokuapp.com/movies?search=${\n      this.state.value\n    }&searchBy=${this.state.type}&limit=20`;\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"change-form\">\n          <div className=\"form\">\n            <form onSubmit={this.handleSubmit} id=\"searchthis\">\n              <input\n                type=\"text\"\n                id=\"search-box\"\n                placeholder=\"\n                Select search type and enter title\"\n                value={this.state.value}\n                onChange={this.handleChange}\n              />\n              <SearchButton name=\"Search\" />\n            </form>\n          </div>\n\n          <div className=\"card\">\n            <div>\n              <input\n                type=\"radio\"\n                name=\"title\"\n                id=\"one\"\n                value=\"title\"\n                checked={this.state.radioGroup.title}\n                onChange={this.handleRadio}\n              />\n              <label htmlFor=\"one\"> Title</label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                name=\"genres\"\n                id=\"two\"\n                value=\"genres\"\n                checked={this.state.radioGroup.genres}\n                onChange={this.handleRadio}\n              />\n              <label htmlFor=\"two\"> Genres </label>\n            </div>\n          </div>\n          <div className=\"movies-found\">\n            {this.state.movies.length} Movies found\n          </div>\n        </div>\n        <div className=\"movie\">\n          {\" \"}\n          {this.state.movies.map(movie => (\n            <MovieCard key={movie.title} {...movie} />\n          ))}{\" \"}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Search from './components/Search';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Search />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}